name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  GKE_PROJECT: your-gcp-project-id
  GKE_CLUSTER: your-gke-cluster
  GKE_ZONE: your-gke-zone

jobs:
  security-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Run OWASP Dependency Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'Spring Resilience Demo'
          path: '.'
          format: 'HTML'
          out: 'reports'
          args: >
            --failOnCVSS 7
            --enableRetired

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/java@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high

  build-and-test:
    needs: security-scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: |
          cd downstream-service
          mvn clean package
          cd ../spring-resilience-demo
          mvn clean package

      - name: Run Tests
        run: |
          cd downstream-service
          mvn test
          cd ../spring-resilience-demo
          mvn test

  build-and-push:
    needs: build-and-test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push downstream-service
        uses: docker/build-push-action@v5
        with:
          context: ./downstream-service
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/downstream-service:${{ github.sha }}

      - name: Build and push spring-resilience-demo
        uses: docker/build-push-action@v5
        with:
          context: ./spring-resilience-demo
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/spring-resilience-demo:${{ github.sha }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.GKE_PROJECT }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Configure Docker for GCP
        run: gcloud auth configure-docker

      - name: Get GKE credentials
        run: |
          gcloud container clusters get-credentials ${{ env.GKE_CLUSTER }} \
            --zone ${{ env.GKE_ZONE }} \
            --project ${{ env.GKE_PROJECT }}

      - name: Deploy to GKE
        run: |
          # Set environment variables for kustomize
          export REGISTRY=${{ env.REGISTRY }}
          export IMAGE_NAME=${{ env.IMAGE_NAME }}
          export TAG=${{ github.sha }}
          
          # Deploy using kustomize
          cd k8s/base
          kustomize edit set image ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/downstream-service:${{ github.sha }}
          kustomize edit set image ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/spring-resilience-demo:${{ github.sha }}
          kustomize build . | kubectl apply -f -
          
          # Wait for deployments to be ready
          kubectl rollout status deployment/downstream-service
          kubectl rollout status deployment/spring-resilience-demo 